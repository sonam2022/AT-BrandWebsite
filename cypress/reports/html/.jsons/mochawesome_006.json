{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 1,
    "failures": 0,
    "start": "2023-01-05T09:14:21.937Z",
    "end": "2023-01-05T09:14:22.133Z",
    "duration": 196,
    "testsRegistered": 1,
    "passPercent": null,
    "pendingPercent": 100,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "a97532e2-67dd-44d0-9669-43b4dd3dc2bc",
      "title": "",
      "fullFile": "cypress\\TestArcanetinmen\\DSWebshopMyAccountOrderdetails.specs.js",
      "file": "cypress\\TestArcanetinmen\\DSWebshopMyAccountOrderdetails.specs.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef953b94-674e-4718-8efe-b3b57d0d4737",
          "title": "Navigate to My Account_Order Details",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Order details and History Management",
              "fullTitle": "Navigate to My Account_Order Details Order details and History Management",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('span[class=\"link-item\"]').contains('Order history and details').click();\ncy.get('tbody').each(($el, index, $list) => {\n  // grabbing all text from second column\n  const txt = $el.text();\n  console.log(txt); // checking the matching condition\n  if (txt.includes('Sleeve Crafter')) {\n    // capturing the next sibling with the help of next() method\n    for (var i = 1; i <= 10; i++) {\n      console.log(i);\n      const product = `tbody > :nth-child(${i}) > :nth-child(${i})`;\n      cy.get(product).eq(index).next().then(function (desc) {\n        // capturing the text of next sibling\n        const rsl = desc.text();\n        console.log(rsl); //assertion to verify the text\n        cy.contains(\"Details\").each(el => {\n          cy.wrap(el).click();\n          console.log(cy.url());\n          cy.go('back');\n        });\n      });\n    }\n  }\n});",
              "err": {},
              "uuid": "0520bd9b-ada3-47fe-b63c-297813e06efd",
              "parentUUID": "ef953b94-674e-4718-8efe-b3b57d0d4737",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "0520bd9b-ada3-47fe-b63c-297813e06efd"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reporterEnabled": "mochawesome",
        "mochawesomeReporteroptions": {
          "charts": "true",
          "reportDir": "cypress/reports/mochawesome-report",
          "reportFilename": "report",
          "overwrite": false,
          "html": true,
          "json": true,
          "quiet": true
        },
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}